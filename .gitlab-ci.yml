stages:
  - build
  - dockerize
  - deploy

variables:
  AWS_REGION: "us-east-1"
  ECS_CLUSTER_NAME: "my-ecs-cluster"
  TF_VERSION: "1.5.5"
  DOCKER_IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"

# Cache Terraform to speed up pipeline runs
cache:
  paths:
    - .terraform/

before_script:
  - apk add --no-cache curl unzip bash git
  - curl -LO https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
  - unzip terraform_${TF_VERSION}_linux_amd64.zip
  - mv terraform /usr/local/bin/
  - terraform -version

build:
  stage: build
  image: gradle:8.3-jdk17
  script:
    - cd app
    - ./gradlew clean build
  artifacts:
    paths:
      - app/build/libs/
    expire_in: 1 hour

dockerize:
  stage: dockerize
  image: docker:24.0.2
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE

deploy:
  stage: deploy
  image: hashicorp/terraform:${TF_VERSION}
  script:
    - cd terraform
    - terraform init
    - terraform validate
    - terraform plan -out=tfplan
    - terraform apply -auto-approve tfplan
  environment:
    name: production
    url: https://your-ecs-service-url.aws.com
  only:
    - main
